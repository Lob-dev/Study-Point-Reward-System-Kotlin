/*
 * This file is generated by jOOQ.
 */
package jooq.dsl.tables.records;


import java.time.LocalDateTime;

import jooq.dsl.tables.JPointActivity;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JPointActivityRecord extends UpdatableRecordImpl<JPointActivityRecord> implements Record7<Long, String, Long, LocalDateTime, Long, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>point.point_activity.id</code>.
     */
    public JPointActivityRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>point.point_activity.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>point.point_activity.action_type</code>.
     */
    public JPointActivityRecord setActionType(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>point.point_activity.action_type</code>.
     */
    public String getActionType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>point.point_activity.current_point</code>.
     */
    public JPointActivityRecord setCurrentPoint(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>point.point_activity.current_point</code>.
     */
    public Long getCurrentPoint() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>point.point_activity.expire_at</code>.
     */
    public JPointActivityRecord setExpireAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>point.point_activity.expire_at</code>.
     */
    public LocalDateTime getExpireAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>point.point_activity.initial_point</code>.
     */
    public JPointActivityRecord setInitialPoint(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>point.point_activity.initial_point</code>.
     */
    public Long getInitialPoint() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>point.point_activity.point_type</code>.
     */
    public JPointActivityRecord setPointType(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>point.point_activity.point_type</code>.
     */
    public String getPointType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>point.point_activity.user_id</code>.
     */
    public JPointActivityRecord setUserId(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>point.point_activity.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, Long, LocalDateTime, Long, String, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, Long, LocalDateTime, Long, String, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return JPointActivity.POINT_ACTIVITY.ID;
    }

    @Override
    public Field<String> field2() {
        return JPointActivity.POINT_ACTIVITY.ACTION_TYPE;
    }

    @Override
    public Field<Long> field3() {
        return JPointActivity.POINT_ACTIVITY.CURRENT_POINT;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return JPointActivity.POINT_ACTIVITY.EXPIRE_AT;
    }

    @Override
    public Field<Long> field5() {
        return JPointActivity.POINT_ACTIVITY.INITIAL_POINT;
    }

    @Override
    public Field<String> field6() {
        return JPointActivity.POINT_ACTIVITY.POINT_TYPE;
    }

    @Override
    public Field<Long> field7() {
        return JPointActivity.POINT_ACTIVITY.USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getActionType();
    }

    @Override
    public Long component3() {
        return getCurrentPoint();
    }

    @Override
    public LocalDateTime component4() {
        return getExpireAt();
    }

    @Override
    public Long component5() {
        return getInitialPoint();
    }

    @Override
    public String component6() {
        return getPointType();
    }

    @Override
    public Long component7() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getActionType();
    }

    @Override
    public Long value3() {
        return getCurrentPoint();
    }

    @Override
    public LocalDateTime value4() {
        return getExpireAt();
    }

    @Override
    public Long value5() {
        return getInitialPoint();
    }

    @Override
    public String value6() {
        return getPointType();
    }

    @Override
    public Long value7() {
        return getUserId();
    }

    @Override
    public JPointActivityRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public JPointActivityRecord value2(String value) {
        setActionType(value);
        return this;
    }

    @Override
    public JPointActivityRecord value3(Long value) {
        setCurrentPoint(value);
        return this;
    }

    @Override
    public JPointActivityRecord value4(LocalDateTime value) {
        setExpireAt(value);
        return this;
    }

    @Override
    public JPointActivityRecord value5(Long value) {
        setInitialPoint(value);
        return this;
    }

    @Override
    public JPointActivityRecord value6(String value) {
        setPointType(value);
        return this;
    }

    @Override
    public JPointActivityRecord value7(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public JPointActivityRecord values(Long value1, String value2, Long value3, LocalDateTime value4, Long value5, String value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JPointActivityRecord
     */
    public JPointActivityRecord() {
        super(JPointActivity.POINT_ACTIVITY);
    }

    /**
     * Create a detached, initialised JPointActivityRecord
     */
    public JPointActivityRecord(Long id, String actionType, Long currentPoint, LocalDateTime expireAt, Long initialPoint, String pointType, Long userId) {
        super(JPointActivity.POINT_ACTIVITY);

        setId(id);
        setActionType(actionType);
        setCurrentPoint(currentPoint);
        setExpireAt(expireAt);
        setInitialPoint(initialPoint);
        setPointType(pointType);
        setUserId(userId);
    }

    /**
     * Create a detached, initialised JPointActivityRecord
     */
    public JPointActivityRecord(jooq.dsl.tables.pojos.JPointActivity value) {
        super(JPointActivity.POINT_ACTIVITY);

        if (value != null) {
            setId(value.getId());
            setActionType(value.getActionType());
            setCurrentPoint(value.getCurrentPoint());
            setExpireAt(value.getExpireAt());
            setInitialPoint(value.getInitialPoint());
            setPointType(value.getPointType());
            setUserId(value.getUserId());
        }
    }
}
