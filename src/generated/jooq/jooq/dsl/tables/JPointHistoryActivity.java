/*
 * This file is generated by jOOQ.
 */
package jooq.dsl.tables;


import java.util.Arrays;
import java.util.List;

import jooq.dsl.Indexes;
import jooq.dsl.JPoint;
import jooq.dsl.Keys;
import jooq.dsl.tables.records.JPointHistoryActivityRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JPointHistoryActivity extends TableImpl<JPointHistoryActivityRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>point.point_history_activity</code>
     */
    public static final JPointHistoryActivity POINT_HISTORY_ACTIVITY = new JPointHistoryActivity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JPointHistoryActivityRecord> getRecordType() {
        return JPointHistoryActivityRecord.class;
    }

    /**
     * The column <code>point.point_history_activity.id</code>.
     */
    public final TableField<JPointHistoryActivityRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>point.point_history_activity.activity_id</code>.
     */
    public final TableField<JPointHistoryActivityRecord, Long> ACTIVITY_ID = createField(DSL.name("activity_id"), SQLDataType.BIGINT.defaultValue(DSL.field("NULL", SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>point.point_history_activity.history_id</code>.
     */
    public final TableField<JPointHistoryActivityRecord, Long> HISTORY_ID = createField(DSL.name("history_id"), SQLDataType.BIGINT.defaultValue(DSL.field("NULL", SQLDataType.BIGINT)), this, "");

    private JPointHistoryActivity(Name alias, Table<JPointHistoryActivityRecord> aliased) {
        this(alias, aliased, null);
    }

    private JPointHistoryActivity(Name alias, Table<JPointHistoryActivityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>point.point_history_activity</code> table
     * reference
     */
    public JPointHistoryActivity(String alias) {
        this(DSL.name(alias), POINT_HISTORY_ACTIVITY);
    }

    /**
     * Create an aliased <code>point.point_history_activity</code> table
     * reference
     */
    public JPointHistoryActivity(Name alias) {
        this(alias, POINT_HISTORY_ACTIVITY);
    }

    /**
     * Create a <code>point.point_history_activity</code> table reference
     */
    public JPointHistoryActivity() {
        this(DSL.name("point_history_activity"), null);
    }

    public <O extends Record> JPointHistoryActivity(Table<O> child, ForeignKey<O, JPointHistoryActivityRecord> key) {
        super(child, key, POINT_HISTORY_ACTIVITY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : JPoint.POINT;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.POINT_HISTORY_ACTIVITY_IDX_POINT_HISTORY_ACTIVITY_HISTORY_ID);
    }

    @Override
    public UniqueKey<JPointHistoryActivityRecord> getPrimaryKey() {
        return Keys.KEY_POINT_HISTORY_ACTIVITY_PRIMARY;
    }

    @Override
    public JPointHistoryActivity as(String alias) {
        return new JPointHistoryActivity(DSL.name(alias), this);
    }

    @Override
    public JPointHistoryActivity as(Name alias) {
        return new JPointHistoryActivity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JPointHistoryActivity rename(String name) {
        return new JPointHistoryActivity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JPointHistoryActivity rename(Name name) {
        return new JPointHistoryActivity(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
